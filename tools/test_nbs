#!/usr/bin/env python3
import time,random,glob,os
from pathlib import Path
from fastai.core.script import *
from fastai.torch_core import parallel
from nbdev.test import test_nb
from nbdev.core import Config

def get_fns(path,max_num,fn):
    path = Path(path)
    if fn: return path.glob(fn)
    fns = list(path.glob("*.ipynb"))
    return [f for f in fns if f.name<max_num and not f.name.startswith('_')]

def test_one(fname, flags=None):
    time.sleep(random.random())
    print(f"testing: {fname}")
    try: test_nb(fname, flags=flags)
    except Exception as e: print("Notebook {fname}", e)

@call_parse
def main(fname:Param("A notebook name or glob to convert", str)=None,
         flags:Param("Space separated list of flags", str)=None):
    "Tests notebooks in `path` and shows any exceptions."
    if flags is not None: flags = flags.split(' ')
    if fname is None: 
        files = [f for f in Config().nbs_path.glob('*.ipynb') if not f.name.startswith('_')]
    else: files = glob.glob(fname)
        
    # make sure we are inside the notebook folder of the project
    os.chdir(Config().nbs_path)
    parallel(test_one, files, progress=False, flags=flags)

